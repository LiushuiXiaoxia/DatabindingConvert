buildscript {
    println("======================")
    println("GITHUB_CI = $GITHUB_CI")
    println("======================")

    repositories {
        mavenLocal()
        jcenter()
        google()
        if (!Boolean.parseBoolean(GITHUB_CI)) {
            maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        }
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.15'
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
}

repositories {
    mavenLocal()
    jcenter()
    google()
    if (!Boolean.parseBoolean(GITHUB_CI)) {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }
    mavenCentral()
}

group 'cn.mycommons'
version VERSION_NAME

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.50"
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

intellij {
    pluginName 'DatabindingConvert'
    version '2019.3'
    plugins = ['java', 'Kotlin']
    updateSinceUntilBuild false
    sandboxDirectory = "${project.rootDir}/sandbox"
}

patchPluginXml {
    changeNotes """.Basic operation.
.Add convert action with no data element.
.Optimize xml generation, support file revocation.
.Support Idea 2019.3 above.
"""
}

def publishToken = System.getenv("intellijPublishToken")
println("publishToken = $publishToken")
if (publishToken != null && publishToken.length() > 0) {
    publishPlugin {
        token publishToken
        username intellijPublishUsername
        password intellijPublishPassword
    }
}